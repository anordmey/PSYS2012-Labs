---
title: "HW #6: R Lab - interpreting and reporting t-tests"
format: live-html
resources:
  - data
webr:
  packages:
    - dplyr 
    - tidyr
    - ggplot2
toc: true
engine: knitr

---

{{< include /_extensions/r-wasm/live/_knitr.qmd >}}

## R Lab #3 (Homework #6)

Welcome to the third R Lab for PSYS 2012!

In this lab you will analyze the data that we collected in class (the memory demos). You will use these data to replicate findings from classic psychology studies, and then practice interpreting and writing up the results of the statistical analysis in APA format. 

This lab, and the remainder of the labs this semester, will focus more on interpreting output of R analyses and practicing writing professional, APA style reports. The R code exercises will guide you through how to collect descriptive statistics and conduct t-tests. In this lab I do many of the analyses for you so you just have to click "Run Code" to get the output. For just one exercise I have you try something on your own (using skills you've learned and practiced in previous labs), but as usual you can click "View Hint" and "View Solution" if you get stuck. Once you have run the R code for each demo, you will create a formal report for each question, including a graph of the results and a formal APA style write up as we have practiced in class.  


::: {.callout-tip title="Remember: Questions will appear like this!"}
As a reminder, throughout this lab questions that you need to answer will appear in a block like this! 

**You will write the answers to all questions in a *separate* word document!**

All questions will include a rubric so you know what information to include.

*Rubric example:*

-   This is not a real rubric but is what a rubric will look like! 
:::

Type your answers to these questions in a separate word document and upload that document to Brightspace for evaluation. There is an "answer template" document attached to the Brightspace assignment, like last time.

## Question 1: Replication of Hyde & Jenkins (1969)

In class we did a demo to replicate the following paper:
Hyde, T. S., & Jenkins, J. J. (1969). The differential effects of incidental tasks on the organization of recall of a list of highly associated words. Journal of Experimental Psychology, 82, 472-481.

In class, you were asked to view a list of words. Half of you were asked to keep track of whether the words had an "E" in them - we will label this group the "shallow" condition. The other half of you were asked to keep track of whether the words sounded pleasant to you - we will label this group the "deep" condition. The original paper, Hyde & Jenkins (1969) found that participants who were asked to pay attention to shallow, surface features of the word (like what letters it contained) were worse at remembering the words later compared to participants who were asked to pay attention to the meaning of the word. 

Let's see if we replicate these findings with our class data. I'll provide the R code to you (and explain it) so you just need to click "Run Code" to get the analysis. Once you have done all three tasks, you will write an APA style report of the analyses you've done. 

### Plotting data in R

To start, let's load in the data. Remember that what you see as output here is just a glimpse of the first six rows of data. 


```{webr}
#| edit: false
demo1 <- read.csv("data/hyde.csv") 

head(demo1)
``` 

You can see that we have three variables, `id`, which is just an ID number assigned to each participant, `condition`, which identifies whether participants were in the deep or shallow condition, and `words`, which identifies how many words participants remember. 

I always like to plot my data before I do anything else - it helps to see a picture of the data and can even help you identify if something went wrong in data collection. Below I'll create a graph for you using functions from the `tidyverse` library, which is an excellent collection of R functions (specifically here we are using a function called `ggplot2`). I won't make you learn the syntax for ggplot in this class, but it's a great set of tools to create graphs in R. You can just click "Run code" to get the plot (you will need to copy it into your homework for the write-up), or if you want you can read the comments after each `#` to understand what each line of code is doing. 

Click "Run Code" below to create a bar graph with errorbars showing 95% CI. 

Before we move on, take a second to understand the story that this graph is telling you. Based on this graph, what do you expect our descriptive statistics to look like? What do you expect the results of our hypothesis test to be?

```{webr}
ggplot(data = demo1, aes(x = condition, y = words)) +  #This first line tells R what data we will use for the plot, and what the x and y axis will represent
       geom_bar(stat = "summary", fun="mean") + #This line tells R we will make a bar graph, using summary statistics - specifically the function "mean"
       geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96), width=0) + # This line adds errorbars, specifically 1.96*se - also known as the 95% confidence interval!
  theme_classic() #This just changes the visual appearance of the graph. You are welcome to look up "ggplot2 themes" and change this to something else, just for fun!
```

### Descriptive statistics

Nex let's calculate descriptive statistics for each group - the mean and standard deviation for the shallow processing group, and the mean and standard deviation for the deep processing group. In the code block below I am using functions from the `tidyverse` library which allow us to filter and organize data in useful ways, using an operator called a "pipe": `|>`. The `|>` operator allows us to do several things to a dataset in a row, so each row performs a new function on the same set of data (identified in the first row). 

In the second row we are using the function `group_by()`, which allows us to group the data according to a particular variable. We'll group by the`condition` variable, because we want to know descriptive statistics for each condition (right now, if we did `mean(words)`, it would just tells us the average number that *all* students remembered, regardless of condition). 

Finally, in the in the third and fourth rows we will use the function `summarize()` to get descriptive statistics for each condition, using the functions `mean()` (to calculate mean) and `sd()` (to calculate standard deviation).

Click "Run code" to see the descriptive statistics!

```{webr}
demo1_descriptives <- demo1 |> 
  group_by(condition) |>
  summarize(mean_words = mean(words), 
            sd_words = sd(words))

demo1_descriptives
```

In the table above, you see a row for descriptive statistics for the deep processing group (mean in the first column and standard deviation in the second column), and then a row for descriptive statistics for the shallow processing group. Write these values down so that you can report them in your APA style write-up later. 

### Conducting a t-test in R

We can use the base R function `t.test()` to conduct a t-test. As we discussed in class, this demo has a *between-subjects* design, and we will do an independent samples t-test. 

The function `t.test()` needs to know what data we are using (we'll specify this by writing `data = `), and also need to know what variables we are comparing.

For the independent measures t-test, we will use "formula notation" to tell R how to interpret the variables. R uses the symbol `~` to indicate the relationship between different types of variables in a formula. The dependent variable or outcome variable (in this case, `words`, which is the # of words participants remembered) goes on the left side of the `~` and the independent variable or predictor variable goes on the right side (in this case, that's `condition`, which tells us whether a participant was in the shallow or deep condition). So our "formula" here will be `words ~ condition`. 


See how I do this below. Then click "run code" to see the results of the t-test!

```{webr}
t.test(words ~ condition, data = demo1, var.equal = T) #var.equal = T means the assumption of equal variances has been met
```

If you look at the results of the t-test, you see many important pieces of information: 

- First, you see what type of test was run. R calls this a two-sample t-test (another name for an independent measures t-test). 
- Two lines down, you see t, df, and p. When reporting t, round to two decimals. Note that p is listed as `p-value < 2.2e-16`. This is how R will report extremely small numbers. If you see this, report it as "p < .001". Otherwise report the exact p-value.
- The line below that, R helpfully tells you what your alternative hypothesis is - this helps us identify that a two-tailed test was run (this is the default in R)
- Below that, it tells you the 95% Confidence Interval. Remember to report these in square brackets: [,]
- Finally it tells you the sample means. Note that the sample means are the same as we collected earlier! The only difference is that R rounded the means at a different point in the table we made earlier. When you report means, round to 2 decimal places as R reported in our table of descriptive statistics. 

Now we have all of the information we need to write a formal APA style write-up. 

### Homework Question #1: APA style write up

In your homework document for question 1, start by copying the plot made in this R lab. Then write a formal APA style write up, including the information in the rubric below. See lecture notes for some examples of what this should look like!

::: {.callout-tip title="Question 1: Writing up demo 1"}

For question 1 of the homework, you should use all of the R output from the code blocks above to write a formal APA style write up (including a graph of the findings). See rubric below to make sure you are including everything you need to include! You should be able to include all of this information in just a few (1-3) sentences.


*Rubric for Question 1 (5 points total):*

- Start with the plot generated by the R code above. This must be presented in a way that is legible and professional. (e.g. not a screenshot of your entire desktop, or a blurry photo of your computer monitor - the best way to do this is to just right-click on the image itself to copy-paste)
-  Identify the type of t-test conducted (I will accept "independent measures" or "two sample" here - in general, if R labels a test using a different name than we've been using, I'll accept either Rs version or the name we've called it in class). 
- State (briefly) what was measured and whether we found a significant or not significant difference. 
- Report the descriptive statistics (mean and standard deviation) in parentheses using APA style notation (M=, SD=), rounding to 2 decimal places. Make sure you use subscripts or labels to make it clear which group you are referring to when you report descriptive statistics!
- Report (either in parentheses or at the end of the sentence) the following statistics **in APA format**: t, df, p, 95% confidence interval, rounding all values to 2 decimal places. Review slides/notes from class if you are not sure how to report these in APA format! (or google it! There's a lot of good resources for reporting statistics in APA format online - just make sure you are specifying APA format in your search)

:::
## Question 2: Replication of Paivio, Smythe, & Yuille (1968) 

Paivio, Smythe, & Yuille (1968) demonstrated that performance on a paired-associate learning task was improved if both words in a pair were concrete (high imagery) words, whereas performance was reduced if both words were abstract (low imagery) words.  In class, you were asked to try to remember word-pairs, so that if you saw the first word in the pair, you would be able to recall the second word in the pair. Some word-pairs were concrete (high imagery) and some were abstract (low imagery). Let's see if we replicate the original findings with our class data. 

### Plotting data in R

We'll start by loading in the data like before: 


```{webr}
#| edit: false 
demo2 <- read.csv("data/paivo.csv")
head(demo2)
``` 

Note that these data are arranged in a different format - now there is a separate column for each condition (one column for the `concrete` words remembered, and one column for the `abstract` words remembered). This is a common format for paired data, because each row represents a single participant, and the concrete and abstract values are "paired" on each row. 

Once again we will start by plotting our data. We will plot the mean of each condition, with 95% confidence intervals around the mean (like in the earlier graph). Note that the code here is a little different - I start by reshaping the data into a format that `ggplot2` prefers, with each column representing a single variable and each row representing a single observation. This is often referred to as `long` or `tidy` data. 

Like before, you can just click "run code" to get the plot here. Looking at the plot, what do you expect our sample means for each group to be? Do you expect us to find a significant difference between conditions?

```{webr}
#Reshape data to "tidy" form for ggplot
#We'll continue to use the original data to conduct the t-test
demo2_long <- demo2 |>
  pivot_longer(cols = !id, 
               names_to = "condition", 
               values_to = "words")

ggplot(data = demo2_long, aes(x = condition, y = words)) +  
       geom_bar(stat = "summary", fun="mean") + 
       geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96), width=0) + 
  theme_classic() 
```

### Descriptives in R

Again, the next thing we'll do is calculate the descriptive statistics for each condition (`concrete` and `abstract`). We can easily do this using just the functions `mean()` and `sd()` here, because our two conditions are represented as separate variables in the dataframe `demo2`. 

See if you can calculate mean and standard deviation of the `concrete` variable and the `abstract` variable below. Make sure you write down the output so that you can use these values in your write-up for the homework! Remember, if you get stuck you can get a hint and then get the solution!

```{webr}
#| exercise: ex_1
# Calculate the mean and sd of concrete words and variable words


```

:::: {.hint exercise="ex_1"}
::: {.callout-note collapse="false"}
## Hint

You'll want to use the functions `mean()` and `sd()` here, and remember to identify a specific variable from the dataframe using the `$` symbol. See below for how you could calculate the mean number of concrete words remembered. Then try to do the same thing for calculating sd of concrete words, then repeat both for abstract words. (Click "view solution" if you're still stuck!)

``` r
mean(demo2$concrete)
```

:::
::::

:::: {.solution exercise="ex_1"}
::: {.callout-note collapse="false"}
## Solution

Copy/paste this code into the exercise code block. 

``` r
mean(demo2$concrete)
sd(demo2$concrete)
mean(demo2$abstract)
sd(demo2$abstract)
```

Remember to press the "run code" button to get the answer!
:::
::::

### Conducting a t-test in R

We will again use the base R function `t.test()` to conduct a t-test. As we discussed in class, this demo has a *within-subjects* design because every participate completed both types of trials (concrete and abstract), so we will do a paired samples t-test. 

We can again use the function `t.test()` to conduct this, but the syntax we use will be slightly different. This time, instead of using formula notation (like we did above), we will just list the two variables we want to compare, and then tell R that we are doing a paired samples t-test.

See how I do this below, and click "Run Code" to see the output of our t-test!

```{webr}
t.test(demo2$concrete, demo2$abstract, paired = T)
```

Looking at the output, you can see the following information: 

- R identifies that this is a paired t-test
- We see the t-statistic, df, and p-value reported. Again, remember that `p-value < 2.2e-16` can be reported as "p < .001" (they're using scientific notation to indicate that this is a very small number). 
- R identifies the alternative hypothesis, which tells us that we are doing a two-tailed t-test
- The 95% confidence interval is reported
- The mean of the difference scores is reported, which is what R is actually using to calculate the t-test (remember that for a paired samples t-test, the comparison distribution is actually the sampling distribution of mean difference scores). You don't need to report this in your write-up, although you will see some people report this in journals.

### Homework Question #2: APA style write up

In your homework document for question 2, start by copying the plot made in this R lab. Then write a formal APA style write up, including the information in the rubric below. See lecture notes for some examples of what this should look like!

::: {.callout-tip title="Question 2: Writing up demo 2"}

For question 2 of the homework, as you did for question 1, you should use all of the R output from the code blocks above to write a formal APA style write up (including a graph of the findings). See rubric below to make sure you are including everything you need to include! You should be able to include all of this information in just a few (1-3) sentences.


*Rubric for Question 2 (5 points total):*

- Start with the plot generated by the R code above. This must be presented in a way that is legible and professional. (e.g. not a screenshot of your entire desktop, or a blurry photo of your computer monitor - the best way to do this is to just right-click on the image itself to copy-paste)
-  Identify the type of t-test conducted (I will accept "independent measures" or "two sample" here - in general, if R labels a test using a different name than we've been using, I'll accept either Rs version or the name we've called it in class). 
- State (briefly) what was measured and whether we found a significant or not significant difference. 
- Report the descriptive statistics (mean and standard deviation) in parentheses using APA style notation (M=, SD=), rounding to 2 decimal places. Make sure you use subscripts or labels to make it clear which group you are referring to when you report descriptive statistics!
- Report (either in parentheses or at the end of the sentence) the following statistics **in APA format**: t, df, p, 95% confidence interval, rounding all values to 2 decimal places. Review slides/notes from class if you are not sure how to report these in APA format! (or google it! There's a lot of good resources for reporting statistics in APA format online - just make sure you are specifying APA format in your search)

